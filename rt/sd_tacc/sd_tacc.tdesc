-- -*- lua -*-
inactiveTbl = { Darwin = 1, }
_G._DEBUG   = false               # required by the new lua posix
local function isActive()
   local posix  = require("posix")
   local osName = posix.uname("%s")
   return (not inactiveTbl[osName])
end

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {"default","setdefault", "getdefault","setgetdefault","getsetdefault" },

   active = 1,
   testName = "sd_tacc",
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh
     unsetMT
     initStdEnvVars
     MODULEPATH=$(projectDir)/mf/TACC;  export MODULEPATH
     MODULEPATH_ROOT=$(projectDir)/mf;  export MODULEPATH_ROOT

     HOME=`(cd $HOME; /bin/pwd)`
     HOME_ORIG=$HOME
     HOME=`pwd`;                        export HOME
     COUNT=0;
     numStep=0;

     rm -fr _stderr.* _stdout.* err.* out.* .lmod.d

     rm -rf $HOME/.lmod.d

     runLmod --version         # 1
     runLmod load TACC.orig    # 2
     runLmod save              # 3

     runLmod purge             # 4
     PATH=$PATH_to_LUA:$PATH
     runLmod load TACC         # 5
     runLmod save              # 6

     HOME=$HOME_ORIG
     export HOME
     cat _stdout.[0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f $(cmdResultFn)

     wrapperDiff -r $(cmdResultFn) $(testDir)/out.txt out.txt
     wrapperDiff -r $(cmdResultFn) $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) $(cmdResultFn)
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
