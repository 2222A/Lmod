-- -*- lua -*-

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {"deprecation"},

   active = 1,
   testName = "deprecation",
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     export MODULEPATH_ROOT=$(projectDir)/mf;
     export LMOD_ADMIN_FILE=$(testDir)/etc/admin.list;
     numStep=0
     COUNT=0
     HOME=`(cd $HOME; /bin/pwd)`

     rm -fr _stderr.* _stdout.* err.* out.* .lmod.d

     runMe lua $(projectDir)/src/lmod.in.lua bash --version                    # 1
     runMe lua $(projectDir)/src/lmod.in.lua bash use -a $projectDir/mf/Core   # 2
     runMe lua $(projectDir)/src/lmod.in.lua bash load gcc                     # 3
     runMe lua $(projectDir)/src/lmod.in.lua bash load git/1.7.4.3             # 4

     cat _stdout.[0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f $(cmdResultFn)
     wrapperDiff -r $(cmdResultFn) $(testDir)/out.txt out.txt
     wrapperDiff -r $(cmdResultFn) $(testDir)/err.txt err.txt
     testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
