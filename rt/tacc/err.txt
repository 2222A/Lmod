===========================
step 1
lua ProjectDIR/src/lmod.in.lua bash --version
===========================
Modules based on Lua: Version 6.4.3  2016-06-17 09:58
    by Robert McLay mclay@tacc.utexas.edu
===========================
step 2
lua ProjectDIR/src/lmod.in.lua bash avail
===========================
ProjectDIR/mf/TACC
   Linux    TACC    TACC-paths    TACC.orig    cluster    cluster-paths    cluster.orig    globus/4.0.1    globus/4.0.7 (D)    mvapich1/mvapich1    pgi/7.1 (D)    pgi/7.2-5
  Where:
   D:  Default Module
Use "module spider" to find all possible modules.
Use "module keyword key1 key2 ..." to search for all possible modules matching any of the "keys".
===========================
step 3
lua ProjectDIR/src/lmod.in.lua bash load TACC
===========================
===========================
step 4
lua ProjectDIR/src/lmod.in.lua bash help mvapich1
===========================
Module Specific Help for "mvapich1/1.0"
	This module loads the MVAPICH MPI environment built with
	Intel compilers. By loading this module, the following commands
	will be automatically available for compiling MPI applications:
	mpif77       (F77 source)
	mpif90       (F90 source)
	mpicc        ( C  source)
	mpiCC/mpicxx (C++ source)
	Version 1.0
===========================
step 5
lua ProjectDIR/src/lmod.in.lua bash list
===========================
Currently Loaded Modules:
  1) Linux   2) pgi/7.1   3) mvapich1/1.0   4) globus/4.0.7   5) cluster-paths   6) cluster   7) TACC-paths   8) TACC
===========================
step 6
lua ProjectDIR/src/lmod.in.lua bash --latest load pgi
===========================
The following have been reloaded with a version change:
  1) mvapich1/1.0 => mvapich1/mvapich1  2) pgi/7.1 => pgi/7.2-5
===========================
step 7
lua ProjectDIR/src/lmod.in.lua bash list
===========================
Currently Loaded Modules:
  1) Linux   2) globus/4.0.7   3) cluster-paths   4) cluster   5) TACC-paths   6) TACC   7) mvapich1/mvapich1   8) pgi/7.2-5
===========================
step 8
lua ProjectDIR/src/lmod.in.lua bash -D load pgi
===========================
Description                      Value
Allow TCL modulefiles            yes
Auto swapping                    yes
Case Independent Sorting         no
Colorize Lmod                    @colorize@
Disable Same Name AutoSwap       no
Using dotfiles                   @use_dot_files@
Allow duplicate paths            no
Require Exact Match/no defaults  no
Export the module command        @export_module@
System lua_json                  @have_lua_json@
System lua-term                  @have_lua_term@
avail: Include modulepath dir    no
MODULEPATH_ROOT                  @modulepath_root@
number of cache dirs             0
Version ordering                 modern
Pager                            @path_to_pager@
Pager Options                    -XqMREF
Path to HashSum                  @path_to_hashsum@
Path to Lua                      @path_to_lua@
Pin Versions in restore          no
Pkg Class name                   Pkg
Lmod prefix                      @PREFIX@
Prepend order                    @prepend_block@
Redirect to stdout               no
Supporting Full Settarg Use      @lmod_full_settarg_support@
Site Pkg location                standard
Ignore Cache                     no
Cached loads                     no
User cache valid time(sec)       @ancient@
Write cache after (sec)          @short_time@
Threshold (sec)                  1
Tmod prepend PATH Rule           no
uname -a
Does Admin file exist            no
Active RC file(s):
ProjectDIR/init/lmodrc.lua
 Lmod Property Table:
propT = {
  arch = {
    displayT = {
      gpu = {
        ["color"] = "red",
        ["doc"] = "built for GPU",
        ["long"] = "(g)",
        ["short"] = "(g)",
      },
      ["gpu:mic"]  = {
        ["color"] = "red",
        ["doc"] = "built natively for MIC and GPU",
        ["long"] = "(g,m)",
        ["short"] = "(gm)",
      },
      ["gpu:mic:offload"]  = {
        ["color"] = "red",
        ["doc"] = "built natively for MIC and GPU and offload to the MIC",
        ["long"] = "(g,m,o)",
        ["short"] = "(@)",
      },
      mic = {
        ["color"] = "blue",
        ["doc"] = "built for host and native MIC",
        ["long"] = "(m)",
        ["short"] = "(m)",
      },
      ["mic:offload"]  = {
        ["color"] = "blue",
        ["doc"] = "built for host, native MIC and offload to the MIC",
        ["long"] = "(m,o)",
        ["short"] = "(*)",
      },
      offload = {
        ["color"] = "blue",
        ["doc"] = "built for offload to the MIC only",
        ["long"] = "(o)",
        ["short"] = "(o)",
      },
    },
    validT = {
      ["gpu"] = 1,
      ["mic"] = 1,
      ["offload"] = 1,
    },
  },
  lmod = {
    displayT = {
      sticky = {
        ["color"] = "red",
        ["doc"] = "Module is Sticky, requires --force to unload or purge",
        ["long"] = "(S)",
        ["short"] = "(S)",
      },
    },
    validT = {
      ["sticky"] = 1,
    },
  },
  state = {
    displayT = {
      experimental = {
        ["color"] = "blue",
        ["doc"] = "Experimental",
        ["long"] = "(E)",
        ["short"] = "(E)",
      },
      obsolete = {
        ["color"] = "red",
        ["doc"] = "Obsolete",
        ["long"] = "(O)",
        ["short"] = "(O)",
      },
      testing = {
        ["color"] = "green",
        ["doc"] = "Testing",
        ["long"] = "(T)",
        ["short"] = "(T)",
      },
    },
    validT = {
      ["experimental"] = 1,
      ["obsolete"] = 1,
      ["testing"] = 1,
    },
  },
  status = {
    displayT = {
      active = {
        ["color"] = "yellow",
        ["doc"] = "Module is loaded",
        ["long"] = "(L)",
        ["short"] = "(L)",
      },
    },
    validT = {
      ["active"] = 1,
    },
  },
}
lmod(-D load pgi){
  Date: Thu Jun 23 08:55:46 2016
  Hostname: mijo
  System: Darwin 15.5.0
  Version: Darwin Kernel Version 15.5.0: Tue Apr 19 18:36:36 PDT 2016; root:xnu-3248.50.21~8/RELEASE_X86_64
  Lmod Version: 6.4.3  2016-06-17 09:58
  package.path: /?.lua;/?/init.lua;ProjectDIR/src/?.lua;ProjectDIR/src/../tools/?.lua;ProjectDIR/src/../shells/?.lua;ProjectDIR/src/?/init.lua;/opt/apps/luarocks/rocks/share/lua/5.3/?.lua;/opt/apps/luarocks/rocks/share/lua/5.3/?/init.lua;/opt/apps/luatools/5.3.2/share/lua/5.3/?.lua;/opt/apps/lua/5.3.3.0-rtm/share/lua/5.3/?.lua;/opt/apps/lua/5.3.3.0-rtm/share/lua/5.3/?/init.lua;/opt/apps/lua/5.3.3.0-rtm/lib/lua/5.3/?.lua;/opt/apps/lua/5.3.3.0-rtm/lib/lua/5.3/?/init.lua;./?.lua;./?/init.lua;
  Master:master(safe: true){
  } Master:master
  mt(){
    MT:new(){
      systemBaseMPATH:       "ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5:/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC"
      (1) o.systemBaseMPATH: "ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5:/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC"
      (1) o._MPATH: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5:/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC
      (2) o.systemBaseMPATH: "ProjectDIR/mf/TACC"
      baseMPATH: ProjectDIR/mf/TACC
      buildBaseMpathA(ProjectDIR/mf/TACC)
      (2) systemBaseMPATH: ProjectDIR/mf/TACC
    } MT:new
    MT:setupMPATH(self,mpath: "ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5:/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC"){
    } MT:setupMPATH
    s_mt._same: true
  } mt
  BaseShell:expand(tbl){
    LMOD_DEFAULT_MODULEPATH="ProjectDIR/mf/TACC";
    export LMOD_DEFAULT_MODULEPATH;
    MODULEPATH="ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5:/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC";
    export MODULEPATH;
  } BaseShell:expand
  cmd name: load
  Master:master(safe: nil){
  } Master:master
  Load_Usr(pgi){
    MT:_build_locationTbl(mpathA, adding: nil, pathEntry: "nil"){
      LMOD_CACHED_LOADS: no
      Cache:cache(){
        Cache:new(){
          #scDescriptT: 0
        } Cache.new
        s_cache.buildCache: nil
      } Cache:cache
      Cache:build(fast=true){
        self.buildCache: false
      } Cache:build
      moduleT: false
      buildAvailT(mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5,"", availT){
        walk_directory_for_mf(mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5, prefix: "", dirA, mnameT){
          Path: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5 does not exist
        } walk_directory_for_mf
        defaultFn: false, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5
        #dirA: 0, n: nil
      } buildAvailT
      buildAvailT(mpath: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles, path: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles,"", availT){
        walk_directory_for_mf(mpath: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles, path: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles, prefix: "", dirA, mnameT){
          Path: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles does not exist
        } walk_directory_for_mf
        defaultFn: false, path: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles
        #dirA: 0, n: nil
      } buildAvailT
      buildAvailT(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC,"", availT){
        walk_directory_for_mf(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC, prefix: "", dirA, mnameT){
          dirA[1].mname: globus, 	dirA[1].fullName: ProjectDIR/mf/TACC/globus, file: globus
          dirA[2].mname: mvapich1, 	dirA[2].fullName: ProjectDIR/mf/TACC/mvapich1, file: mvapich1
          dirA[3].mname: pgi, 	dirA[3].fullName: ProjectDIR/mf/TACC/pgi, file: pgi
          mnameT[Linux].fn: ProjectDIR/mf/TACC/Linux sn: Linux, version: false
          mnameT[TACC].fn: ProjectDIR/mf/TACC/TACC sn: TACC, version: false
          mnameT[TACC-paths].fn: ProjectDIR/mf/TACC/TACC-paths.lua sn: TACC-paths, version: false
          mnameT[TACC.orig].fn: ProjectDIR/mf/TACC/TACC.orig sn: TACC.orig, version: false
          mnameT[cluster].fn: ProjectDIR/mf/TACC/cluster sn: cluster, version: false
          mnameT[cluster-paths].fn: ProjectDIR/mf/TACC/cluster-paths sn: cluster-paths, version: false
          mnameT[cluster.orig].fn: ProjectDIR/mf/TACC/cluster.orig sn: cluster.orig, version: false
        } walk_directory_for_mf
        defaultFn: false, path: ProjectDIR/mf/TACC
        #dirA: 3, n: nil
        Meta Module: cluster
        Meta Module: TACC.orig
        Meta Module: cluster-paths
        Meta Module: TACC
        Meta Module: cluster.orig
        Meta Module: Linux
        Meta Module: TACC-paths
        buildAvailT(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC/globus,"globus", availT){
          walk_directory_for_mf(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC/globus, prefix: "globus", dirA, mnameT){
            mnameT[globus/4.0.1].fn: ProjectDIR/mf/TACC/globus/4.0.1 sn: globus, version: 4.0.1
            mnameT[globus/4.0.7].fn: ProjectDIR/mf/TACC/globus/4.0.7 sn: globus, version: 4.0.7
          } walk_directory_for_mf
          defaultFn: false, path: ProjectDIR/mf/TACC/globus
          availT[globus].total: 2
        } buildAvailT
        buildAvailT(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC/mvapich1,"mvapich1", availT){
          walk_directory_for_mf(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC/mvapich1, prefix: "mvapich1", dirA, mnameT){
            mnameT[mvapich1/mvapich1].fn: ProjectDIR/mf/TACC/mvapich1/mvapich1 sn: mvapich1, version: mvapich1
          } walk_directory_for_mf
          defaultFn: false, path: ProjectDIR/mf/TACC/mvapich1
          availT[mvapich1].total: 1
        } buildAvailT
        buildAvailT(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC/pgi,"pgi", availT){
          walk_directory_for_mf(mpath: ProjectDIR/mf/TACC, path: ProjectDIR/mf/TACC/pgi, prefix: "pgi", dirA, mnameT){
            mnameT[pgi/7.1].fn: ProjectDIR/mf/TACC/pgi/7.1 sn: pgi, version: 7.1
            mnameT[pgi/7.2-5].fn: ProjectDIR/mf/TACC/pgi/7.2-5 sn: pgi, version: 7.2-5
          } walk_directory_for_mf
          defaultFn: ProjectDIR/mf/TACC/pgi/.version, path: ProjectDIR/mf/TACC/pgi
          availT[pgi].total: 2
          versionFile(v: /.version, sn: pgi, path: ProjectDIR/mf/TACC/pgi/.version){
            handle file: /.version
            capture(ProjectDIR/src/RC2lua.tcl ProjectDIR/mf/TACC/pgi/.version){
              status: true, type(status): boolean
            } capture
            MAlias:parseModA(pgi, modA){
              entry.kind: set-default-version
              version: 7.1
            } MAlias:parseModA
            version: 7.1
          } versionFile
          return from versionFile: v: 7.1, f:ProjectDIR/mf/TACC/pgi/7.1
        } buildAvailT
      } buildAvailT
      pv: nil, parseV:  , firstC: x
      mpath:   ProjectDIR/mf/TACC
      sn:      cluster
      entry.v: false
      pv: nil, parseV:  , firstC: x
      mpath:   ProjectDIR/mf/TACC
      sn:      TACC
      entry.v: false
      pv: nil, parseV:  , firstC: x
      mpath:   ProjectDIR/mf/TACC
      sn:      cluster.orig
      entry.v: false
      pv: nil, parseV:  , firstC: x
      mpath:   ProjectDIR/mf/TACC
      sn:      TACC-paths
      entry.v: false
      pv: nil, parseV:  , firstC: x
      mpath:   ProjectDIR/mf/TACC
      sn:      Linux
      entry.v: false
      pv: nil, parseV:  , firstC: x
      mpath:   ProjectDIR/mf/TACC
      sn:      TACC.orig
      entry.v: false
      pv: nil, parseV:  , firstC: x
      mpath:   ProjectDIR/mf/TACC
      sn:      cluster-paths
      entry.v: false
      availT:
        mpath: ProjectDIR/mf/TACC:
          Linux(t: 0, h: 0):
          TACC(t: 0, h: 0):
          TACC-paths(t: 0, h: 0):
          TACC.orig(t: 0, h: 0):
          cluster(t: 0, h: 0):
          cluster-paths(t: 0, h: 0):
          cluster.orig(t: 0, h: 0):
          globus(t: 2, h: 0): 4.0.1, 4.0.7,
          mvapich1(t: 1, h: 0): mvapich1,
          pgi(t: 2, h: 0): 7.1, 7.2-5,
        mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5:
        mpath: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:
      locationT:
        sn: Linux:
          file: ProjectDIR/mf/TACC/Linux: 0
          last Default: ProjectDIR/mf/TACC/Linux
        sn: TACC:
          file: ProjectDIR/mf/TACC/TACC: 0
          last Default: ProjectDIR/mf/TACC/TACC
        sn: TACC-paths:
          file: ProjectDIR/mf/TACC/TACC-paths: 0
          last Default: ProjectDIR/mf/TACC/TACC-paths.lua
        sn: TACC.orig:
          file: ProjectDIR/mf/TACC/TACC.orig: 0
          last Default: ProjectDIR/mf/TACC/TACC.orig
        sn: cluster:
          file: ProjectDIR/mf/TACC/cluster: 0
          last Default: ProjectDIR/mf/TACC/cluster
        sn: cluster-paths:
          file: ProjectDIR/mf/TACC/cluster-paths: 0
          last Default: ProjectDIR/mf/TACC/cluster-paths
        sn: cluster.orig:
          file: ProjectDIR/mf/TACC/cluster.orig: 0
          last Default: ProjectDIR/mf/TACC/cluster.orig
        sn: globus:
          file: ProjectDIR/mf/TACC/globus: 4.0.1 4.0.7
          last Default: ProjectDIR/mf/TACC/globus/4.0.7
        sn: mvapich1:
          file: ProjectDIR/mf/TACC/mvapich1: mvapich1
          last Default: ProjectDIR/mf/TACC/mvapich1/mvapich1
        sn: pgi:
          file: ProjectDIR/mf/TACC/pgi: 7.1 7.2-5
          marked Default: ProjectDIR/mf/TACC/pgi/7.1
    } MT:_build_locationTbl
    set self._availT
    Setting mcp to MC_Load
    familyLoadRegister(mA){
      usrName: pgi
    } familyLoadRegister
    Master:master(safe: nil){
    } Master:master
    MasterControl:load(mA={pgi}){
      Master:load(mA){
        MName:find(pgi){
          MName:find sn: pgi
          MName:find_exact_match(pathA, t){
            UserName: pgi
            MName:version(){
              sType:   load
              sn:      pgi
              name:    pgi
              version: nil
            } MName:version
            Did not find: pgi
          } MName:find_exact_match
          (1) t.fn: nil
          MName:find_default(pathA, t){
            MName:version(){
              sType:   load
              sn:      pgi
              name:    pgi
              version: nil
            } MName:version
            modName: pgi fn: ProjectDIR/mf/TACC/pgi/7.1 modFullName: pgi/7.1 default: 1
          } MName:find_default
          (1) t.fn: ProjectDIR/mf/TACC/pgi/7.1
          (2) t.fn: ProjectDIR/mf/TACC/pgi/7.1
        } MName:find
        Master:load: i: 1, sn: pgi, fn: ProjectDIR/mf/TACC/pgi/7.1
        Master:load reload module: "pgi" as sn: "pgi" is already loaded
        MName:version(){
          sType:   load
          sn:      pgi
          name:    pgi
          version: nil
        } MName:version
        mnV: nil, mtV: 7.2-5
        Setting mcp to MC_Load
        Master:master(safe: nil){
        } Master:master
        MasterControl:unload(mA={pgi}){
          Master:unload(mA){
            MasterControl:_setMode("unload"){
            } MasterControl:_setMode
            Setting mcp to MC_Unload
            Setting mcp to MC_Unload
            Trying to unload: pgi sn: pgi
            Mark pgi as pending
            MT:setStatus(pgi,pending)
            Master:unload: "pgi/7.2-5" from f: ProjectDIR/mf/TACC/pgi/7.2-5
            changePATH: 0
            loadModuleFile(ProjectDIR/mf/TACC/pgi/7.2-5){
              mode(){
                MasterControl:mode(){
                  mode: unload
                } MasterControl:mode
              } mode
              capture(ProjectDIR/src/tcl2lua.tcl -l "Linux:globus:globus/4.0.7:cluster-paths:cluster:TACC-paths:TACC:mvapich1:mvapich1/mvapich1" -f pgi/7.2-5 -m remove -u pgi -s bash ProjectDIR/mf/TACC/pgi/7.2-5){
                status: true, type(status): boolean
              } capture
              whatis(loads the PGI compiler environment ){
              } whatis
              setenv(PGI, /opt/apps/pgi/7.2-5){
                MasterControl:unsetenv("PGI", "/opt/apps/pgi/7.2-5"){
                } MasterControl:unsetenv
              } setenv
              prepend_path(PATH, /opt/apps/pgi/7.2/linux86-64/7.2-5/bin){
                MasterControl:remove_path{"PATH", "/opt/apps/pgi/7.2/linux86-64/7.2-5/bin", delim=":", nodups="nil", priority=0, where=first}{
                  Var:remove(value: /opt/apps/pgi/7.2/linux86-64/7.2-5/bin, where:first, priority: 0){
                    path: /opt/apps/pgi/7.2/linux86-64/7.2-5/bin
                    removing path: /opt/apps/pgi/7.2/linux86-64/7.2-5/bin
                    where: all, new value: /opt/apps/intel10_1/mvapich/1.0.1/bin:/usr/local/first:/share/apps/teragrid/globus-4.0.7-r1/sbin:/share/apps/teragrid/globus-4.0.7-r1/bin:/share/apps/teragrid/globus-4.0.7-r1/myproxy-3.4/bin:ProjectDIR/src:PATH_to_TM:/bin:/opt/apps/pki_apps:/share/sge6.2/default/pe_scripts:.
                  } Var:remove
                } MasterControl:remove_path
              } prepend_path
              prepend_path(MANPATH, /opt/apps/pgi/7.2/linux86-64/7.2-5/man){
                MasterControl:remove_path{"MANPATH", "/opt/apps/pgi/7.2/linux86-64/7.2-5/man", delim=":", nodups="nil", priority=0, where=first}{
                  Var:remove(value: /opt/apps/pgi/7.2/linux86-64/7.2-5/man, where:first, priority: 0){
                    path: /opt/apps/pgi/7.2/linux86-64/7.2-5/man
                    removing path: /opt/apps/pgi/7.2/linux86-64/7.2-5/man
                    where: all, new value: /opt/apps/intel10_1/mvapich/1.0.1/man:/usr/share/man:/usr/X11R6/man:/opt/ganglia/man:/opt/rocks/man:/usr/kerberos/man:/usr/man:/share/apps/teragrid/globus-4.0.7-r1/man:/share/apps/teragrid/globus-4.0.7-r1/myproxy-3.4/man:/opt/apps/pki_apps/man:/usr/local/man
                  } Var:remove
                } MasterControl:remove_path
              } prepend_path
              prepend_path(LD_LIBRARY_PATH, /opt/apps/pgi/7.2/linux86-64/7.2-5/libso){
                MasterControl:remove_path{"LD_LIBRARY_PATH", "/opt/apps/pgi/7.2/linux86-64/7.2-5/libso", delim=":", nodups="nil", priority=0, where=first}{
                  Var:remove(value: /opt/apps/pgi/7.2/linux86-64/7.2-5/libso, where:first, priority: 0){
                    path: /opt/apps/pgi/7.2/linux86-64/7.2-5/libso
                    removing path: /opt/apps/pgi/7.2/linux86-64/7.2-5/libso
                    where: all, new value: /opt/apps/intel10_1/mvapich/1.0.1/lib:/opt/apps/intel10_1/mvapich/1.0.1/lib/shared:/opt/ofed/lib64:/share/apps/teragrid/globus-4.0.7-r1/lib:/share/apps/teragrid/globus-4.0.7-r1/myproxy-3.4/lib
                  } Var:remove
                } MasterControl:remove_path
              } prepend_path
              prepend_path(MODULEPATH, ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5){
                MasterControl:remove_path{"MODULEPATH", "ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5", delim=":", nodups="nil", priority=0, where=first}{
                  Var:remove(value: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5, where:first, priority: 0){
                    Var:prt(nil){
                      name:  "MODULEPATH"
                      imin:  1
                      imax:  3
                      value: "ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5:/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC"
                         "ProjectDIR/mf/TACC": {3, 0}
                         "ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5": {1, 0}
                         "/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles": {2, 0}
                    } Var:prt
                    path: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5
                    removing path: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5
                    calling reEvalModulePath()
                    MT:reEvalModulePath(adding: false, pathEntry: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5){
                      MT:_build_locationTbl(mpathA, adding: false, pathEntry: "ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5"){
                        Fast removal of directory: ProjectDIR/mf/TACC_COMPILER/pgi/7.2-5
                        pv: nil, parseV:  , firstC: x
                        mpath:   ProjectDIR/mf/TACC
                        sn:      cluster
                        entry.v: false
                        pv: nil, parseV:  , firstC: x
                        mpath:   ProjectDIR/mf/TACC
                        sn:      TACC
                        entry.v: false
                        pv: nil, parseV:  , firstC: x
                        mpath:   ProjectDIR/mf/TACC
                        sn:      cluster.orig
                        entry.v: false
                        pv: nil, parseV:  , firstC: x
                        mpath:   ProjectDIR/mf/TACC
                        sn:      TACC-paths
                        entry.v: false
                        pv: nil, parseV:  , firstC: x
                        mpath:   ProjectDIR/mf/TACC
                        sn:      Linux
                        entry.v: false
                        pv: nil, parseV:  , firstC: x
                        mpath:   ProjectDIR/mf/TACC
                        sn:      TACC.orig
                        entry.v: false
                        pv: nil, parseV:  , firstC: x
                        mpath:   ProjectDIR/mf/TACC
                        sn:      cluster-paths
                        entry.v: false
                        availT:
                          mpath: ProjectDIR/mf/TACC:
                            Linux(t: 0, h: 0):
                            TACC(t: 0, h: 0):
                            TACC-paths(t: 0, h: 0):
                            TACC.orig(t: 0, h: 0):
                            cluster(t: 0, h: 0):
                            cluster-paths(t: 0, h: 0):
                            cluster.orig(t: 0, h: 0):
                            globus(t: 2, h: 0): 4.0.1, 4.0.7,
                            mvapich1(t: 1, h: 0): mvapich1,
                            pgi(t: 2, h: 0): 7.1, 7.2-5,
                          mpath: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:
                        locationT:
                          sn: Linux:
                            file: ProjectDIR/mf/TACC/Linux: 0
                            last Default: ProjectDIR/mf/TACC/Linux
                          sn: TACC:
                            file: ProjectDIR/mf/TACC/TACC: 0
                            last Default: ProjectDIR/mf/TACC/TACC
                          sn: TACC-paths:
                            file: ProjectDIR/mf/TACC/TACC-paths: 0
                            last Default: ProjectDIR/mf/TACC/TACC-paths.lua
                          sn: TACC.orig:
                            file: ProjectDIR/mf/TACC/TACC.orig: 0
                            last Default: ProjectDIR/mf/TACC/TACC.orig
                          sn: cluster:
                            file: ProjectDIR/mf/TACC/cluster: 0
                            last Default: ProjectDIR/mf/TACC/cluster
                          sn: cluster-paths:
                            file: ProjectDIR/mf/TACC/cluster-paths: 0
                            last Default: ProjectDIR/mf/TACC/cluster-paths
                          sn: cluster.orig:
                            file: ProjectDIR/mf/TACC/cluster.orig: 0
                            last Default: ProjectDIR/mf/TACC/cluster.orig
                          sn: globus:
                            file: ProjectDIR/mf/TACC/globus: 4.0.1 4.0.7
                            last Default: ProjectDIR/mf/TACC/globus/4.0.7
                          sn: mvapich1:
                            file: ProjectDIR/mf/TACC/mvapich1: mvapich1
                            last Default: ProjectDIR/mf/TACC/mvapich1/mvapich1
                          sn: pgi:
                            file: ProjectDIR/mf/TACC/pgi: 7.1 7.2-5
                            marked Default: ProjectDIR/mf/TACC/pgi/7.1
                      } MT:_build_locationTbl
                      set self._availT
                    } MT:reEvalModulePath
                    where: all, new value: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC
                  } Var:remove
                } MasterControl:remove_path
              } prepend_path
              family(compiler){
                MasterControl:unset_family(compiler){
                  mt:unsetfamily("compiler")
                  MasterControl:unsetenv("LMOD_FAMILY_COMPILER", ""){
                  } MasterControl:unsetenv
                  MasterControl:unsetenv("TACC_FAMILY_COMPILER", ""){
                  } MasterControl:unsetenv
                } MasterControl:unset_family
              } family
            } loadModuleFile
            changePATH: 0
            calling mt:remove("pgi")
            Var:remove(value: pgi/7.2-5, where:all, priority: 0){
              path: pgi/7.2-5
              removing path: pgi/7.2-5
              where: all, new value: Linux:globus/4.0.7:cluster-paths:cluster:TACC-paths:TACC:mvapich1/mvapich1
            } Var:remove
            Var:remove(value: ProjectDIR/mf/TACC/pgi/7.2-5, where:all, priority: 0){
              path: ProjectDIR/mf/TACC/pgi/7.2-5
              removing path: ProjectDIR/mf/TACC/pgi/7.2-5
              where: all, new value: ProjectDIR/mf/TACC/Linux:ProjectDIR/mf/TACC/globus/4.0.7:ProjectDIR/mf/TACC/cluster-paths:ProjectDIR/mf/TACC/cluster:ProjectDIR/mf/TACC/TACC-paths.lua:ProjectDIR/mf/TACC/TACC:ProjectDIR/mf/TACC/mvapich1/mvapich1
            } Var:remove
            changePATH: 0 Zombie state: true mStack:empty(): true
            In unload calling Master.reload
            Master:reloadAll(){
              Setting mcp to MC_Load
              module sn: Linux is active
              userName:  Linux
              MName:find(Linux){
                MName:find sn: Linux
                MName:find_exact_match(pathA, t){
                  UserName: Linux
                  MName:version(){
                    sType:   userName
                    sn:      Linux
                    name:    Linux
                    version: ''
                  } MName:version
                  fullName: Linux
                  found:    true fn: ProjectDIR/mf/TACC/Linux
                  modName: Linux fn: ProjectDIR/mf/TACC/Linux modFullName: Linux default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/Linux
                (2) t.fn: ProjectDIR/mf/TACC/Linux
              } MName:find
              module sn: globus is active
              userName:  globus
              MName:find(globus){
                MName:find sn: globus
                MName:find_exact_match(pathA, t){
                  UserName: globus
                  MName:version(){
                    sType:   userName
                    sn:      globus
                    name:    globus
                    version: 4.0.7
                  } MName:version
                  Did not find: globus
                } MName:find_exact_match
                (1) t.fn: nil
                MName:find_default(pathA, t){
                  MName:version(){
                    sType:   userName
                    sn:      globus
                    name:    globus
                    version: 4.0.7
                  } MName:version
                  modName: globus fn: ProjectDIR/mf/TACC/globus/4.0.7 modFullName: globus/4.0.7 default: 1
                } MName:find_default
                (1) t.fn: ProjectDIR/mf/TACC/globus/4.0.7
                (2) t.fn: ProjectDIR/mf/TACC/globus/4.0.7
              } MName:find
              module sn: cluster-paths is active
              userName:  cluster-paths
              MName:find(cluster-paths){
                MName:find sn: cluster-paths
                MName:find_exact_match(pathA, t){
                  UserName: cluster-paths
                  MName:version(){
                    sType:   userName
                    sn:      cluster-paths
                    name:    cluster-paths
                    version: ''
                  } MName:version
                  fullName: cluster-paths
                  found:    true fn: ProjectDIR/mf/TACC/cluster-paths
                  modName: cluster-paths fn: ProjectDIR/mf/TACC/cluster-paths modFullName: cluster-paths default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/cluster-paths
                (2) t.fn: ProjectDIR/mf/TACC/cluster-paths
              } MName:find
              module sn: cluster is active
              userName:  cluster
              MName:find(cluster){
                MName:find sn: cluster
                MName:find_exact_match(pathA, t){
                  UserName: cluster
                  MName:version(){
                    sType:   userName
                    sn:      cluster
                    name:    cluster
                    version: ''
                  } MName:version
                  fullName: cluster
                  found:    true fn: ProjectDIR/mf/TACC/cluster
                  modName: cluster fn: ProjectDIR/mf/TACC/cluster modFullName: cluster default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/cluster
                (2) t.fn: ProjectDIR/mf/TACC/cluster
              } MName:find
              module sn: TACC-paths is active
              userName:  TACC-paths
              MName:find(TACC-paths){
                MName:find sn: TACC-paths
                MName:find_exact_match(pathA, t){
                  UserName: TACC-paths
                  MName:version(){
                    sType:   userName
                    sn:      TACC-paths
                    name:    TACC-paths
                    version: ''
                  } MName:version
                  fullName: TACC-paths
                  found:    true fn: ProjectDIR/mf/TACC/TACC-paths.lua
                  modName: TACC-paths fn: ProjectDIR/mf/TACC/TACC-paths.lua modFullName: TACC-paths default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/TACC-paths.lua
                (2) t.fn: ProjectDIR/mf/TACC/TACC-paths.lua
              } MName:find
              module sn: TACC is active
              userName:  TACC
              MName:find(TACC){
                MName:find sn: TACC
                MName:find_exact_match(pathA, t){
                  UserName: TACC
                  MName:version(){
                    sType:   userName
                    sn:      TACC
                    name:    TACC
                    version: ''
                  } MName:version
                  fullName: TACC
                  found:    true fn: ProjectDIR/mf/TACC/TACC
                  modName: TACC fn: ProjectDIR/mf/TACC/TACC modFullName: TACC default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/TACC
                (2) t.fn: ProjectDIR/mf/TACC/TACC
              } MName:find
              module sn: mvapich1 is active
              userName:  mvapich1/mvapich1
              MName:find(mvapich1/mvapich1){
                MName:find sn: mvapich1
                MName:find_exact_match(pathA, t){
                  UserName: mvapich1/mvapich1
                  MName:version(){
                    sType:   userName
                    sn:      mvapich1
                    name:    mvapich1/mvapich1
                    version: mvapich1
                  } MName:version
                  fullName: mvapich1/mvapich1
                  found:    true fn: ProjectDIR/mf/TACC/mvapich1/mvapich1
                  modName: mvapich1 fn: ProjectDIR/mf/TACC/mvapich1/mvapich1 modFullName: mvapich1/mvapich1 default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/mvapich1/mvapich1
                (2) t.fn: ProjectDIR/mf/TACC/mvapich1/mvapich1
              } MName:find
              Setting mpc to MC_Unload
            } Master:reloadAll
            changePATH: 0 Zombie state: false mStack:empty(): true
            Setting mcp to MC_Load
          } Master:unload
        } MasterControl:unload
        Master:master(safe: nil){
        } Master:master
        MasterControl:load(mA={pgi}){
          Master:load(mA){
            MName:find(pgi){
              MName:find sn: pgi
              MName:find_exact_match(pathA, t){
                UserName: pgi
                MName:version(){
                  sType:   load
                  sn:      pgi
                  name:    pgi
                  version: nil
                } MName:version
                Did not find: pgi
              } MName:find_exact_match
              (1) t.fn: nil
              MName:find_default(pathA, t){
                MName:version(){
                  sType:   load
                  sn:      pgi
                  name:    pgi
                  version: nil
                } MName:version
                modName: pgi fn: ProjectDIR/mf/TACC/pgi/7.1 modFullName: pgi/7.1 default: 1
              } MName:find_default
              (1) t.fn: ProjectDIR/mf/TACC/pgi/7.1
              (2) t.fn: ProjectDIR/mf/TACC/pgi/7.1
            } MName:find
            Master:load: i: 1, sn: pgi, fn: ProjectDIR/mf/TACC/pgi/7.1
            Master:loading: "pgi" from f: "ProjectDIR/mf/TACC/pgi/7.1"
            MT:add(t,pending){
              MT:add:  short: pgi, full: pgi/7.1
              MT:add: fn: ProjectDIR/mf/TACC/pgi/7.1, default: 1
              MT:add: loadOrder: nil
            } MT:add
            loadModuleFile(ProjectDIR/mf/TACC/pgi/7.1){
              mode(){
                MasterControl:mode(){
                  mode: load
                } MasterControl:mode
              } mode
              capture(ProjectDIR/src/tcl2lua.tcl -l "Linux:globus:globus/4.0.7:cluster-paths:cluster:TACC-paths:TACC:mvapich1:mvapich1/mvapich1" -f pgi/7.1 -m load -u pgi -s bash ProjectDIR/mf/TACC/pgi/7.1){
                status: true, type(status): boolean
              } capture
              whatis(loads the PGI compiler environment ){
              } whatis
              setenv(PGI, /opt/apps/pgi/7.1){
                MasterControl:setenv("PGI", "/opt/apps/pgi/7.1", "nil"){
                } MasterControl:setenv
              } setenv
              prepend_path(PATH, /opt/apps/pgi/7.1/linux86-64/7.1-2/bin){
                MasterControl:prepend_path(t){
                  name:"PATH", value: "/opt/apps/pgi/7.1/linux86-64/7.1-2/bin", delim=":", nodups="true", priority=0
                } MasterControl:prepend_path
              } prepend_path
              prepend_path(MANPATH, /opt/apps/pgi/7.1/linux86-64/7.1-2/man){
                MasterControl:prepend_path(t){
                  name:"MANPATH", value: "/opt/apps/pgi/7.1/linux86-64/7.1-2/man", delim=":", nodups="true", priority=0
                } MasterControl:prepend_path
              } prepend_path
              prepend_path(LD_LIBRARY_PATH, /opt/apps/pgi/7.1/linux86-64/7.1-2/libso){
                MasterControl:prepend_path(t){
                  name:"LD_LIBRARY_PATH", value: "/opt/apps/pgi/7.1/linux86-64/7.1-2/libso", delim=":", nodups="true", priority=0
                } MasterControl:prepend_path
              } prepend_path
              prepend_path(MODULEPATH, ProjectDIR/mf/TACC_COMPILER/pgi/7.1){
                MasterControl:prepend_path(t){
                  name:"MODULEPATH", value: "ProjectDIR/mf/TACC_COMPILER/pgi/7.1", delim=":", nodups="true", priority=0
                  calling reEvalModulePath()
                  MT:reEvalModulePath(adding: true, pathEntry: ProjectDIR/mf/TACC_COMPILER/pgi/7.1){
                    MT:_build_locationTbl(mpathA, adding: true, pathEntry: "ProjectDIR/mf/TACC_COMPILER/pgi/7.1"){
                      LMOD_CACHED_LOADS: no
                      Cache:cache(){
                        s_cache.buildCache: nil
                      } Cache:cache
                      Cache:build(fast=true){
                        self.buildCache: false
                      } Cache:build
                      moduleT: false
                      buildAvailT(mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.1, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.1,"", availT){
                        walk_directory_for_mf(mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.1, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.1, prefix: "", dirA, mnameT){
                          dirA[1].mname: mvapich1, 	dirA[1].fullName: ProjectDIR/mf/TACC_COMPILER/pgi/7.1/mvapich1, file: mvapich1
                        } walk_directory_for_mf
                        defaultFn: false, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.1
                        #dirA: 1, n: nil
                        buildAvailT(mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.1, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.1/mvapich1,"mvapich1", availT){
                          walk_directory_for_mf(mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.1, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.1/mvapich1, prefix: "mvapich1", dirA, mnameT){
                            mnameT[mvapich1/1.0].fn: ProjectDIR/mf/TACC_COMPILER/pgi/7.1/mvapich1/1.0 sn: mvapich1, version: 1.0
                          } walk_directory_for_mf
                          defaultFn: false, path: ProjectDIR/mf/TACC_COMPILER/pgi/7.1/mvapich1
                          availT[mvapich1].total: 1
                        } buildAvailT
                      } buildAvailT
                      pv: nil, parseV:  , firstC: x
                      mpath:   ProjectDIR/mf/TACC
                      sn:      cluster
                      entry.v: false
                      pv: nil, parseV:  , firstC: x
                      mpath:   ProjectDIR/mf/TACC
                      sn:      TACC
                      entry.v: false
                      pv: nil, parseV:  , firstC: x
                      mpath:   ProjectDIR/mf/TACC
                      sn:      cluster.orig
                      entry.v: false
                      pv: nil, parseV:  , firstC: x
                      mpath:   ProjectDIR/mf/TACC
                      sn:      TACC-paths
                      entry.v: false
                      pv: nil, parseV:  , firstC: x
                      mpath:   ProjectDIR/mf/TACC
                      sn:      Linux
                      entry.v: false
                      pv: nil, parseV:  , firstC: x
                      mpath:   ProjectDIR/mf/TACC
                      sn:      TACC.orig
                      entry.v: false
                      pv: nil, parseV:  , firstC: x
                      mpath:   ProjectDIR/mf/TACC
                      sn:      cluster-paths
                      entry.v: false
                      availT:
                        mpath: ProjectDIR/mf/TACC:
                          Linux(t: 0, h: 0):
                          TACC(t: 0, h: 0):
                          TACC-paths(t: 0, h: 0):
                          TACC.orig(t: 0, h: 0):
                          cluster(t: 0, h: 0):
                          cluster-paths(t: 0, h: 0):
                          cluster.orig(t: 0, h: 0):
                          globus(t: 2, h: 0): 4.0.1, 4.0.7,
                          mvapich1(t: 1, h: 0): mvapich1,
                          pgi(t: 2, h: 0): 7.1, 7.2-5,
                        mpath: ProjectDIR/mf/TACC_COMPILER/pgi/7.1:
                          mvapich1(t: 1, h: 0): 1.0,
                        mpath: /opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:
                      locationT:
                        sn: Linux:
                          file: ProjectDIR/mf/TACC/Linux: 0
                          last Default: ProjectDIR/mf/TACC/Linux
                        sn: TACC:
                          file: ProjectDIR/mf/TACC/TACC: 0
                          last Default: ProjectDIR/mf/TACC/TACC
                        sn: TACC-paths:
                          file: ProjectDIR/mf/TACC/TACC-paths: 0
                          last Default: ProjectDIR/mf/TACC/TACC-paths.lua
                        sn: TACC.orig:
                          file: ProjectDIR/mf/TACC/TACC.orig: 0
                          last Default: ProjectDIR/mf/TACC/TACC.orig
                        sn: cluster:
                          file: ProjectDIR/mf/TACC/cluster: 0
                          last Default: ProjectDIR/mf/TACC/cluster
                        sn: cluster-paths:
                          file: ProjectDIR/mf/TACC/cluster-paths: 0
                          last Default: ProjectDIR/mf/TACC/cluster-paths
                        sn: cluster.orig:
                          file: ProjectDIR/mf/TACC/cluster.orig: 0
                          last Default: ProjectDIR/mf/TACC/cluster.orig
                        sn: globus:
                          file: ProjectDIR/mf/TACC/globus: 4.0.1 4.0.7
                          last Default: ProjectDIR/mf/TACC/globus/4.0.7
                        sn: mvapich1:
                          file: ProjectDIR/mf/TACC_COMPILER/pgi/7.1/mvapich1: 1.0
                          file: ProjectDIR/mf/TACC/mvapich1: mvapich1
                          last Default: ProjectDIR/mf/TACC_COMPILER/pgi/7.1/mvapich1/1.0
                        sn: pgi:
                          file: ProjectDIR/mf/TACC/pgi: 7.1 7.2-5
                          marked Default: ProjectDIR/mf/TACC/pgi/7.1
                    } MT:_build_locationTbl
                    set self._availT
                  } MT:reEvalModulePath
                } MasterControl:prepend_path
              } prepend_path
              family(compiler){
                MasterControl:family(compiler){
                  mt:setfamily("compiler","pgi")
                  MasterControl:setenv("LMOD_FAMILY_COMPILER", "pgi", "nil"){
                  } MasterControl:setenv
                  MasterControl:setenv("TACC_FAMILY_COMPILER", "pgi", "nil"){
                  } MasterControl:setenv
                } MasterControl:family
              } family
            } loadModuleFile
            MT:setStatus(pgi,active)
            Making pgi active
            Marked: pgi/7.1 as loaded
            Master:load calling reloadAll()
            Master:reloadAll(){
              Setting mcp to MC_Load
              module sn: Linux is active
              userName:  Linux
              MName:find(Linux){
                MName:find sn: Linux
                MName:find_exact_match(pathA, t){
                  UserName: Linux
                  MName:version(){
                    sType:   userName
                    sn:      Linux
                    name:    Linux
                    version: ''
                  } MName:version
                  fullName: Linux
                  found:    true fn: ProjectDIR/mf/TACC/Linux
                  modName: Linux fn: ProjectDIR/mf/TACC/Linux modFullName: Linux default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/Linux
                (2) t.fn: ProjectDIR/mf/TACC/Linux
              } MName:find
              module sn: globus is active
              userName:  globus
              MName:find(globus){
                MName:find sn: globus
                MName:find_exact_match(pathA, t){
                  UserName: globus
                  MName:version(){
                    sType:   userName
                    sn:      globus
                    name:    globus
                    version: 4.0.7
                  } MName:version
                  Did not find: globus
                } MName:find_exact_match
                (1) t.fn: nil
                MName:find_default(pathA, t){
                  MName:version(){
                    sType:   userName
                    sn:      globus
                    name:    globus
                    version: 4.0.7
                  } MName:version
                  modName: globus fn: ProjectDIR/mf/TACC/globus/4.0.7 modFullName: globus/4.0.7 default: 1
                } MName:find_default
                (1) t.fn: ProjectDIR/mf/TACC/globus/4.0.7
                (2) t.fn: ProjectDIR/mf/TACC/globus/4.0.7
              } MName:find
              module sn: cluster-paths is active
              userName:  cluster-paths
              MName:find(cluster-paths){
                MName:find sn: cluster-paths
                MName:find_exact_match(pathA, t){
                  UserName: cluster-paths
                  MName:version(){
                    sType:   userName
                    sn:      cluster-paths
                    name:    cluster-paths
                    version: ''
                  } MName:version
                  fullName: cluster-paths
                  found:    true fn: ProjectDIR/mf/TACC/cluster-paths
                  modName: cluster-paths fn: ProjectDIR/mf/TACC/cluster-paths modFullName: cluster-paths default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/cluster-paths
                (2) t.fn: ProjectDIR/mf/TACC/cluster-paths
              } MName:find
              module sn: cluster is active
              userName:  cluster
              MName:find(cluster){
                MName:find sn: cluster
                MName:find_exact_match(pathA, t){
                  UserName: cluster
                  MName:version(){
                    sType:   userName
                    sn:      cluster
                    name:    cluster
                    version: ''
                  } MName:version
                  fullName: cluster
                  found:    true fn: ProjectDIR/mf/TACC/cluster
                  modName: cluster fn: ProjectDIR/mf/TACC/cluster modFullName: cluster default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/cluster
                (2) t.fn: ProjectDIR/mf/TACC/cluster
              } MName:find
              module sn: TACC-paths is active
              userName:  TACC-paths
              MName:find(TACC-paths){
                MName:find sn: TACC-paths
                MName:find_exact_match(pathA, t){
                  UserName: TACC-paths
                  MName:version(){
                    sType:   userName
                    sn:      TACC-paths
                    name:    TACC-paths
                    version: ''
                  } MName:version
                  fullName: TACC-paths
                  found:    true fn: ProjectDIR/mf/TACC/TACC-paths.lua
                  modName: TACC-paths fn: ProjectDIR/mf/TACC/TACC-paths.lua modFullName: TACC-paths default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/TACC-paths.lua
                (2) t.fn: ProjectDIR/mf/TACC/TACC-paths.lua
              } MName:find
              module sn: TACC is active
              userName:  TACC
              MName:find(TACC){
                MName:find sn: TACC
                MName:find_exact_match(pathA, t){
                  UserName: TACC
                  MName:version(){
                    sType:   userName
                    sn:      TACC
                    name:    TACC
                    version: ''
                  } MName:version
                  fullName: TACC
                  found:    true fn: ProjectDIR/mf/TACC/TACC
                  modName: TACC fn: ProjectDIR/mf/TACC/TACC modFullName: TACC default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/TACC
                (2) t.fn: ProjectDIR/mf/TACC/TACC
              } MName:find
              module sn: mvapich1 is active
              userName:  mvapich1/mvapich1
              MName:find(mvapich1/mvapich1){
                MName:find sn: mvapich1
                MName:find_exact_match(pathA, t){
                  UserName: mvapich1/mvapich1
                  MName:version(){
                    sType:   userName
                    sn:      mvapich1
                    name:    mvapich1/mvapich1
                    version: mvapich1
                  } MName:version
                  MName:version(){
                    sType:   userName
                    sn:      mvapich1
                    name:    mvapich1/mvapich1
                    version: mvapich1
                  } MName:version
                  fullName: mvapich1/mvapich1
                  found:    true fn: ProjectDIR/mf/TACC/mvapich1/mvapich1
                  modName: mvapich1 fn: ProjectDIR/mf/TACC/mvapich1/mvapich1 modFullName: mvapich1/mvapich1 default: 0
                } MName:find_exact_match
                (1) t.fn: ProjectDIR/mf/TACC/mvapich1/mvapich1
                (2) t.fn: ProjectDIR/mf/TACC/mvapich1/mvapich1
              } MName:find
              module sn: pgi is active
              userName:  pgi
              MName:find(pgi){
                MName:find sn: pgi
                MName:find_exact_match(pathA, t){
                  UserName: pgi
                  MName:version(){
                    sType:   userName
                    sn:      pgi
                    name:    pgi
                    version: 7.1
                  } MName:version
                  Did not find: pgi
                } MName:find_exact_match
                (1) t.fn: nil
                MName:find_default(pathA, t){
                  MName:version(){
                    sType:   userName
                    sn:      pgi
                    name:    pgi
                    version: 7.1
                  } MName:version
                  modName: pgi fn: ProjectDIR/mf/TACC/pgi/7.1 modFullName: pgi/7.1 default: 1
                } MName:find_default
                (1) t.fn: ProjectDIR/mf/TACC/pgi/7.1
                (2) t.fn: ProjectDIR/mf/TACC/pgi/7.1
              } MName:find
              Setting mpc to MC_Load
            } Master:reloadAll
          } Master:load
        } MasterControl:load
        Setting mcp to MC_Load
      } Master:load
    } MasterControl:load
    MC:familyLoaded(){
      usrName: pgi is true
    } MC:familyLoaded
  } Load_Usr
  Master:master(safe: nil){
  } Master:master
  MT:reportChanges(){
    MT.origMT(){
    } MT.origMT
The following have been reloaded with a version change:
    ColumnTable:new(){
      ColumnTable:_number_of_columns_rows(){
        width: 300 imin: 25,25 imax: 25, 25
        ncols: 1 sumWrt: 25 sumPrt: 25
        ncols: 1, nrows: 1
        self.ncols: 1
        ncols: 1
      }
    }
  1) pgi/7.2-5 => pgi/7.1
  } MT:reportChanges
} Lmod
BaseShell:expand(tbl){
  LD_LIBRARY_PATH="/opt/apps/pgi/7.1/linux86-64/7.1-2/libso:/opt/apps/intel10_1/mvapich/1.0.1/lib:/opt/apps/intel10_1/mvapich/1.0.1/lib/shared:/opt/ofed/lib64:/share/apps/teragrid/globus-4.0.7-r1/lib:/share/apps/teragrid/globus-4.0.7-r1/myproxy-3.4/lib";
  export LD_LIBRARY_PATH;
  LMOD_DEFAULT_MODULEPATH="ProjectDIR/mf/TACC";
  export LMOD_DEFAULT_MODULEPATH;
  LMOD_FAMILY_COMPILER="pgi";
  export LMOD_FAMILY_COMPILER;
  LOADEDMODULES="Linux:globus/4.0.7:cluster-paths:cluster:TACC-paths:TACC:mvapich1/mvapich1:pgi/7.1";
  export LOADEDMODULES;
  MANPATH="/opt/apps/pgi/7.1/linux86-64/7.1-2/man:/opt/apps/intel10_1/mvapich/1.0.1/man:/usr/share/man:/usr/X11R6/man:/opt/ganglia/man:/opt/rocks/man:/usr/kerberos/man:/usr/man:/share/apps/teragrid/globus-4.0.7-r1/man:/share/apps/teragrid/globus-4.0.7-r1/myproxy-3.4/man:/opt/apps/pki_apps/man:/usr/local/man";
  export MANPATH;
  MODULEPATH="ProjectDIR/mf/TACC_COMPILER/pgi/7.1:/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles:ProjectDIR/mf/TACC";
  export MODULEPATH;
  PATH="/opt/apps/pgi/7.1/linux86-64/7.1-2/bin:/opt/apps/intel10_1/mvapich/1.0.1/bin:/usr/local/first:/share/apps/teragrid/globus-4.0.7-r1/sbin:/share/apps/teragrid/globus-4.0.7-r1/bin:/share/apps/teragrid/globus-4.0.7-r1/myproxy-3.4/bin:ProjectDIR/src:PATH_to_TM:/bin:/opt/apps/pki_apps:/share/sge6.2/default/pe_scripts:.";
  export PATH;
  PGI="/opt/apps/pgi/7.1";
  export PGI;
  TACC_FAMILY_COMPILER="pgi";
  export TACC_FAMILY_COMPILER;
  _LMFILES_="ProjectDIR/mf/TACC/Linux:ProjectDIR/mf/TACC/globus/4.0.7:ProjectDIR/mf/TACC/cluster-paths:ProjectDIR/mf/TACC/cluster:ProjectDIR/mf/TACC/TACC-paths.lua:ProjectDIR/mf/TACC/TACC:ProjectDIR/mf/TACC/mvapich1/mvapich1:ProjectDIR/mf/TACC/pgi/7.1";
  export _LMFILES_;
  BaseShell:expandMT(vstr){
    _ModuleTable001_="X01vZHVsZVRhYmxlXz17WyJhY3RpdmVTaXplIl09OCxiYXNlTXBhdGhBPXsiL1VzZXJzL21jbGF5L3cvbG1vZC9tZi9UQUNDIix9LFsiY19yZWJ1aWxkVGltZSJdPTcyMDAuMCxbImNfc2hvcnRUaW1lIl09MC4yMDk1Mjc5NjkzNjAzNSxmYW1pbHk9e1siTVBJIl09Im12YXBpY2gxIixbImNvbXBpbGVyIl09InBnaSIsfSxpbmFjdGl2ZT17fSxtVD17TGludXg9e1siRk4iXT0iL1VzZXJzL21jbGF5L3cvbG1vZC9tZi9UQUNDL0xpbnV4IixbImRlZmF1bHQiXT0wLFsiZnVsbE5hbWUiXT0iTGludXgiLFsibG9hZE9yZGVyIl09MSxwcm9wVD17fSxbInNob3J0Il09IkxpbnV4IixbInN0YXR1cyJdPSJhY3RpdmUiLH0sVEFDQz17WyJGTiJdPSIvVXNlcnMvbWNsYXkvdy9sbW9kL21m";
    export _ModuleTable001_;
    _ModuleTable002_="L1RBQ0MvVEFDQyIsWyJkZWZhdWx0Il09MCxbImZ1bGxOYW1lIl09IlRBQ0MiLFsibG9hZE9yZGVyIl09Nixwcm9wVD17fSxbInNob3J0Il09IlRBQ0MiLFsic3RhdHVzIl09ImFjdGl2ZSIsfSxbIlRBQ0MtcGF0aHMiXT17WyJGTiJdPSIvVXNlcnMvbWNsYXkvdy9sbW9kL21mL1RBQ0MvVEFDQy1wYXRocy5sdWEiLFsiZGVmYXVsdCJdPTAsWyJmdWxsTmFtZSJdPSJUQUNDLXBhdGhzIixbImxvYWRPcmRlciJdPTUscHJvcFQ9e30sWyJzaG9ydCJdPSJUQUNDLXBhdGhzIixbInN0YXR1cyJdPSJhY3RpdmUiLH0sY2x1c3Rlcj17WyJGTiJdPSIvVXNlcnMvbWNsYXkvdy9sbW9kL21mL1RBQ0MvY2x1c3RlciIsWyJkZWZhdWx0Il09MCxbImZ1bGxOYW1lIl09ImNsdXN0ZXIiLFsibG9h";
    export _ModuleTable002_;
    _ModuleTable003_="ZE9yZGVyIl09NCxwcm9wVD17fSxbInNob3J0Il09ImNsdXN0ZXIiLFsic3RhdHVzIl09ImFjdGl2ZSIsfSxbImNsdXN0ZXItcGF0aHMiXT17WyJGTiJdPSIvVXNlcnMvbWNsYXkvdy9sbW9kL21mL1RBQ0MvY2x1c3Rlci1wYXRocyIsWyJkZWZhdWx0Il09MCxbImZ1bGxOYW1lIl09ImNsdXN0ZXItcGF0aHMiLFsibG9hZE9yZGVyIl09Myxwcm9wVD17fSxbInNob3J0Il09ImNsdXN0ZXItcGF0aHMiLFsic3RhdHVzIl09ImFjdGl2ZSIsfSxnbG9idXM9e1siRk4iXT0iL1VzZXJzL21jbGF5L3cvbG1vZC9tZi9UQUNDL2dsb2J1cy80LjAuNyIsWyJkZWZhdWx0Il09MSxbImZ1bGxOYW1lIl09Imdsb2J1cy80LjAuNyIsWyJsb2FkT3JkZXIiXT0yLHByb3BUPXt9LFsic2hvcnQiXT0i";
    export _ModuleTable003_;
    _ModuleTable004_="Z2xvYnVzIixbInN0YXR1cyJdPSJhY3RpdmUiLH0sbXZhcGljaDE9e1siRk4iXT0iL1VzZXJzL21jbGF5L3cvbG1vZC9tZi9UQUNDL212YXBpY2gxL212YXBpY2gxIixbImRlZmF1bHQiXT0wLFsiZnVsbE5hbWUiXT0ibXZhcGljaDEvbXZhcGljaDEiLFsibG9hZE9yZGVyIl09Nyxwcm9wVD17fSxbInNob3J0Il09Im12YXBpY2gxIixbInN0YXR1cyJdPSJhY3RpdmUiLH0scGdpPXtbIkZOIl09Ii9Vc2Vycy9tY2xheS93L2xtb2QvbWYvVEFDQy9wZ2kvNy4xIixbImRlZmF1bHQiXT0xLFsiZnVsbE5hbWUiXT0icGdpLzcuMSIsWyJsb2FkT3JkZXIiXT04LHByb3BUPXt9LFsic2hvcnQiXT0icGdpIixbInN0YXR1cyJdPSJhY3RpdmUiLH0sfSxtcGF0aEE9eyIvVXNlcnMvbWNsYXkv";
    export _ModuleTable004_;
    _ModuleTable005_="dy9sbW9kL21mL1RBQ0NfQ09NUElMRVIvcGdpLzcuMSIsIi9vcHQvYXBwcy9pbnRlbDEwXzEvbXZhcGljaDFfMV8wXzEvbW9kdWxlZmlsZXMiLCIvVXNlcnMvbWNsYXkvdy9sbW9kL21mL1RBQ0MiLH0sWyJzeXN0ZW1CYXNlTVBBVEgiXT0iL1VzZXJzL21jbGF5L3cvbG1vZC9tZi9UQUNDIixbInZlcnNpb24iXT0yLH0=";
    export _ModuleTable005_;
    _ModuleTable_Sz_="5";
    export _ModuleTable_Sz_;
    _ModuleTable_ = {
      ["activeSize"] = 8,
      baseMpathA = {
        "ProjectDIR/mf/TACC",
      },
      ["c_rebuildTime"] = 7200.0,
      ["c_shortTime"] = 0.20952796936035,
      family = {
        ["MPI"] = "mvapich1",
        ["compiler"] = "pgi",
      },
      inactive = {},
      mT = {
        Linux = {
          ["FN"] = "ProjectDIR/mf/TACC/Linux",
          ["default"] = 0,
          ["fullName"] = "Linux",
          ["loadOrder"] = 1,
          propT = {},
          ["short"] = "Linux",
          ["status"] = "active",
        },
        TACC = {
          ["FN"] = "ProjectDIR/mf/TACC/TACC",
          ["default"] = 0,
          ["fullName"] = "TACC",
          ["loadOrder"] = 6,
          propT = {},
          ["short"] = "TACC",
          ["status"] = "active",
        },
        ["TACC-paths"]  = {
          ["FN"] = "ProjectDIR/mf/TACC/TACC-paths.lua",
          ["default"] = 0,
          ["fullName"] = "TACC-paths",
          ["loadOrder"] = 5,
          propT = {},
          ["short"] = "TACC-paths",
          ["status"] = "active",
        },
        cluster = {
          ["FN"] = "ProjectDIR/mf/TACC/cluster",
          ["default"] = 0,
          ["fullName"] = "cluster",
          ["loadOrder"] = 4,
          propT = {},
          ["short"] = "cluster",
          ["status"] = "active",
        },
        ["cluster-paths"]  = {
          ["FN"] = "ProjectDIR/mf/TACC/cluster-paths",
          ["default"] = 0,
          ["fullName"] = "cluster-paths",
          ["loadOrder"] = 3,
          propT = {},
          ["short"] = "cluster-paths",
          ["status"] = "active",
        },
        globus = {
          ["FN"] = "ProjectDIR/mf/TACC/globus/4.0.7",
          ["default"] = 1,
          ["fullName"] = "globus/4.0.7",
          ["loadOrder"] = 2,
          propT = {},
          ["short"] = "globus",
          ["status"] = "active",
        },
        mvapich1 = {
          ["FN"] = "ProjectDIR/mf/TACC/mvapich1/mvapich1",
          ["default"] = 0,
          ["fullName"] = "mvapich1/mvapich1",
          ["loadOrder"] = 7,
          propT = {},
          ["short"] = "mvapich1",
          ["status"] = "active",
        },
        pgi = {
          ["FN"] = "ProjectDIR/mf/TACC/pgi/7.1",
          ["default"] = 1,
          ["fullName"] = "pgi/7.1",
          ["loadOrder"] = 8,
          propT = {},
          ["short"] = "pgi",
          ["status"] = "active",
        },
      },
      mpathA = {
        "ProjectDIR/mf/TACC_COMPILER/pgi/7.1", "/opt/apps/intel10_1/mvapich1_1_0_1/modulefiles", "ProjectDIR/mf/TACC",
      },
      ["systemBaseMPATH"] = "ProjectDIR/mf/TACC",
      ["version"] = 2,
    }
  } BaseShell:expandMT
} BaseShell:expand
Exec:exec(){
} Exec:exec
===========================
step 9
lua ProjectDIR/src/lmod.in.lua bash list
===========================
Currently Loaded Modules:
  1) Linux   2) globus/4.0.7   3) cluster-paths   4) cluster   5) TACC-paths   6) TACC   7) mvapich1/mvapich1   8) pgi/7.1
===========================
step 10
lua ProjectDIR/src/lmod.in.lua bash --latest swap pgi pgi
===========================
===========================
step 11
lua ProjectDIR/src/lmod.in.lua bash list
===========================
Currently Loaded Modules:
  1) Linux   2) globus/4.0.7   3) cluster-paths   4) cluster   5) TACC-paths   6) TACC   7) mvapich1/mvapich1   8) pgi/7.2-5
===========================
step 12
lua ProjectDIR/src/lmod.in.lua bash unload cluster
===========================
===========================
step 13
lua ProjectDIR/src/lmod.in.lua bash purge
===========================
===========================
step 14
lua ProjectDIR/src/lmod.in.lua bash use ProjectDIR/rt/tacc/mf/Core
===========================
===========================
step 15
lua ProjectDIR/src/lmod.in.lua bash show gatk
===========================
   ProjectDIR/rt/tacc/mf/Core/gatk/1.0:
prepend_path("PATH","/opt/apps/gatk/1.0/bin")
===========================
step 16
lua ProjectDIR/src/lmod.in.lua bash load gatk
===========================
To execute GATK run: java -jar /opt/apps/gatk/1.0/java/GenomeAnalysisTK.jar
Test of brackets [foo]
===========================
step 17
lua ProjectDIR/src/lmod.in.lua bash unload gatk
===========================
===========================
step 18
lua ProjectDIR/src/lmod.in.lua bash load stir
===========================
mod is stir/default
mod is stir/2.1
