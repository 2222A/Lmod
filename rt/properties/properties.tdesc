-- -*- lua -*-
testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {"properties" },

   active = 1,
   testName = "properties",
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     MODULEPATH_ROOT=$(testDir)/mf;     export MODULEPATH_ROOT
     numStep=0
     COUNT=0
     ORIG_HOME=`(cd $HOME; /bin/pwd)`
     HOME=`/bin/pwd`

     rm -f  _stderr.* _stdout.* err.* out.*
     rm -fr .lmod.d .lmodrc.lua

     cp $(projectDir)/init/.lmodrc.lua .
     mkdir -p .lmod.d/.cache

     runLmod --version                  # 1
     runLmod use -a $(testDir)/mf/Core  # 2
     runLmod use -a $(testDir)/mf/bio   # 3
     runLmod use -a $(testDir)/mf/cae   # 4
     runLmod load PrgEnv                # 5
     runLmod list                       # 6
     buildModuleT   $LMOD_DEFAULT_MODULEPATH > ~/.lmod.d/.cache/moduleT.lua
     buildDbT $LMOD_DEFAULT_MODULEPATH > ~/.lmod.d/.cache/dbT.lua
     runLmod avail                      # 7


     HOME=$ORIG_HOME



     cat _stdout.[0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f $(cmdResultFn)
     wrapperDiff -r $(cmdResultFn) $(testDir)/out.txt out.txt
     wrapperDiff -r $(cmdResultFn) $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) $(cmdResultFn)
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
