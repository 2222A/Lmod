-- -*- lua -*-
testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {"swap" },

   active = 1,
   testName = "swap",
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     MODULEPATH=$(projectDir)/mf/Core;  export MODULEPATH
     MODULEPATH_ROOT=$(projectDir)/mf;  export MODULEPATH_ROOT
     numStep=0
     COUNT=0
     ORIG_HOME=`(cd $HOME; /bin/pwd)`
     HOME=`/bin/pwd`

     rm -fr _stderr.* _stdout.* err.* out.* .lmod.d
     cp $(projectDir)/init/.lmodrc.lua .

     runMe lua $(projectDir)/src/lmod.in.lua bash --version                          #  1
     runMe lua $(projectDir)/src/lmod.in.lua bash load admin PrgEnv openmpi parmetis #  2
     runMe lua $(projectDir)/src/lmod.in.lua bash avail                              #  3
     runMe lua $(projectDir)/src/lmod.in.lua bash unload intel                       #  4
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               #  5
     runMe lua $(projectDir)/src/lmod.in.lua bash load gcc                           #  6
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               #  7
     runMe lua $(projectDir)/src/lmod.in.lua bash swap gcc intel                     #  8
     runMe lua $(projectDir)/src/lmod.in.lua bash load phdf5/1.8.2 petsc             #  9
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               # 10
     runMe lua $(projectDir)/src/lmod.in.lua bash swap openmpi mpich2                # 11
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               # 12
     runMe lua $(projectDir)/src/lmod.in.lua bash swap mpich2  openmpi               # 13
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               # 14
     runMe lua $(projectDir)/src/lmod.in.lua bash load phdf5                         # 15
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               # 16
     runMe lua $(projectDir)/src/lmod.in.lua bash swap openmpi mpich2                # 17
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               # 18
     runMe lua $(projectDir)/src/lmod.in.lua bash unload mpich2                      # 19
     runMe lua $(projectDir)/src/lmod.in.lua bash list                               # 20



     HOME=$ORIG_HOME

     cat _stdout.[0-9][0-9] > _stdout.orig
     joinBase64Results -bash _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f $(cmdResultFn)
     wrapperDiff -r $(cmdResultFn) $(testDir)/out.txt out.txt
     wrapperDiff -r $(cmdResultFn) $(testDir)/err.txt err.txt
     testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
