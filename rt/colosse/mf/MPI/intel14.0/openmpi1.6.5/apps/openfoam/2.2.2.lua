help(
[[
This module loads OpenFOAM 2.2.2.
]])

local version = "2.2.2"
local wm_project = "OpenFOAM"
local wm_compiler = "Icc"
local mpi_arch_path = "/software6/mpi/openmpi/1.6.5_intel"
local base = pathJoin("/software6/apps/openfoam/" .. version .. "_intel")

-- Nothing below this line should need changing for a different version or compiler
local wm_project_dir = pathJoin(base,wm_project .. "-" .. version)
local wm_thirdparty_dir = pathJoin(base,"ThirdParty-" .. version)
local wm_project_user_dir = pathJoin(os.getenv("HOME"),wm_project,os.getenv("USER") .. "-" .. version)
local wm_options = "linux64" .. wm_compiler .. "DPOpt"
local foam_site_dir = pathJoin(base,"site",version,"platforms",wm_options)
local platform_dir = pathJoin(wm_project_dir,"platforms",wm_options)
local foam_usr_dir = pathJoin(wm_project_user_dir,"platforms",wm_options)

whatis("(Website________) http://www.openfoam.com")

--Environment variables set in etc/bashrc
setenv("WM_PROJECT",         wm_project)
setenv("WM_PROJECT_VERSION", version)
setenv("FOAM_INST_DIR",      base)
setenv("WM_COMPILER", 	     wm_compiler)
setenv("WM_ARCH_OPTION",     64)
setenv("WM_PRECISION_OPTION","DP")
setenv("WM_COMPILE_OPTION",  "Opt")
setenv("WM_MPLIB",           "SYSTEMOPENMPI")
setenv("WM_OSTYPE",          "POSIX")
setenv("FOAM_SIGFPE",        " ")
setenv("FOAM_SETTINGS",        " ")
setenv("WM_PROJECT_INST_DIR", base)
setenv("WM_PROJECT_DIR",     wm_project_dir)
setenv("WM_THIRD_PARTY_DIR",  wm_thirdparty_dir)
setenv("WM_PROJECT_USER_DIR", wm_project_user_dir)

setenv("WM_ARCH",            "linux64")
setenv("WM_COMPILER_LIB_ARCH", 64)
setenv("WM_CC",                "gcc")
setenv("WM_CXX",               "g++")
setenv("WM_CFLAGS",            "-m64 -fPIC")
setenv("WM_CXXFLAGS",          "-m64 -fPIC")
setenv("WM_LDFLAGS",           "-m64")
setenv("FOAM_JOB_DIR",         pathJoin(base,"jobControl"))
setenv("WM_DIR",               pathJoin(wm_project_dir,"wmake"))
setenv("WM_LINK_LANGUAGE",     "c++")
setenv("WM_OPTIONS",           wm_options)
setenv("FOAM_APPBIN",          pathJoin(platform_dir,"bin"))
setenv("FOAM_LIBBIN",          pathJoin(platform_dir,"lib"))
setenv("FOAM_EXT_LIBBIN",      pathJoin(wm_thirdparty_dir,"platforms",wm_options,"lib"))
setenv("FOAM_SITE_APPBIN",     pathJoin(foam_site_dir,"bin"))
setenv("FOAM_SITE_LIBBIN",     pathJoin(foam_site_dir,"lib"))
setenv("FOAM_USER_APPBIN",     pathJoin(foam_usr_dir,"bin"))
setenv("FOAM_USER_LIBBIN",     pathJoin(foam_usr_dir,"lib"))
setenv("FOAM_APP",             pathJoin(wm_project_dir,"applications"))
setenv("FOAM_SRC",             pathJoin(wm_project_dir,"src"))
setenv("FOAM_TUTORIALS",       pathJoin(wm_project_dir,"tutorials"))
setenv("FOAM_UTILITIES",       pathJoin(wm_project_dir,"applications","utilities"))
setenv("FOAM_SOLVERS",         pathJoin(wm_project_dir,"applications","solvers"))
setenv("FOAM_RUN",             pathJoin(wm_project_user_dir,"run"))
setenv("FOAM_MPI",             "openmpi-system")
setenv("MPI_ARCH_PATH",        mpi_arch_path)
setenv("MPI_BUFFER_SIZE",      20000000)

setenv("ParaView_DIR",         pathJoin(wm_thirdparty_dir,"platforms","linux64" .. wm_compiler,"paraview-3.12.0"))
setenv("ParaView_MAJOR",       "3.12")
setenv("ParaView_VERSION",     "3.12.0")

prepend_path("LD_LIBRARY_PATH", pathJoin(wm_project_dir,"platforms",wm_options,"lib","dummy"))
prepend_path("LD_LIBRARY_PATH", pathJoin(wm_thirdparty_dir,"platforms",wm_options,"lib"))
prepend_path("LD_LIBRARY_PATH", pathJoin(platform_dir,"lib"))
prepend_path("LD_LIBRARY_PATH", pathJoin(foam_site_dir,"lib"))
prepend_path("LD_LIBRARY_PATH", pathJoin(foam_usr_dir,"lib"))
prepend_path("LD_LIBRARY_PATH", pathJoin(wm_thirdparty_dir,"platforms",wm_options,"lib","openmpi-system"))
prepend_path("LD_LIBRARY_PATH", pathJoin(platform_dir,"lib","openmpi-system"))

prepend_path("PATH", pathJoin(wm_project_dir,"wmake"))
prepend_path("PATH", pathJoin(wm_project_dir,"bin"))
prepend_path("PATH", pathJoin(platform_dir,"bin"))
prepend_path("PATH", pathJoin(foam_site_dir,"bin"))
prepend_path("PATH", pathJoin(foam_usr_dir,"bin"))

set_alias("app",          'cd $FOAM_APP')
set_alias("foam",         'cd $WM_PROJECT_DIR')
set_alias("foam3rdParty", 'cd $WM_THIRD_PARTY_DIR')
set_alias("foamApps",     'cd $FOAM_APP')
set_alias("foamSite",     'cd $WM_PROJECT_INST_DIR/site')
set_alias("foamSol",      'cd $FOAM_SOLVERS')
set_alias("foamTuts",      'cd $FOAM_TUTORIALS')
set_alias("foamUtils",    'cd $FOAM_UTILITIES')
set_alias("foamfv",       'cd $FOAM_SRC/finiteVolume')
set_alias("foamsrc",      'cd $FOAM_SRC/$WM_PROJECT')
set_alias("lib",          'cd $FOAM_LIBBIN')
set_alias("run",          'cd $FOAM_RUN')
set_alias("sol",          'cd $FOAM_SOLVERS')
set_alias("src",          'cd $FOAM_SRC')
set_alias("tut",          'cd $FOAM_TUTORIALS')
set_alias("util",         'cd $FOAM_UTILITIES')
set_alias("wm32",         'wmSET WM_ARCH_OPTION=32')
set_alias("wm64",         'wmSET WM_ARCH_OPTION=64')
set_alias("wmDP",         'wmSET WM_PRECISION_OPTION=DP')
set_alias("wmSET",        '. $WM_PROJECT_DIR/etc/bashrc.colosse')
set_alias("wmSP",         'wmSET WM_PRECISION_OPTION=SP')
set_alias("wmSchedOFF",   'unset WM_SCHEDULER')
set_alias("wmSchedON",    'export WM_SCHEDULER=$WM_PROJECT_DIR/wmake/wmakeScheduler')
set_alias("wmUNSET",      '. $WM_PROJECT_DIR/etc/config/unset.sh')

