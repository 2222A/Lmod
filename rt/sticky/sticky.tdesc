-- -*- lua -*-
local testName="sticky"
testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test initial module load
   ]],
   keywords = {testName },

   active = 1,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     MODULEPATH=$(testDir)/mf/Core;     export MODULEPATH
     MODULEPATH_ROOT=$(testDir)/mf;     export MODULEPATH_ROOT

     numStep=0
     COUNT=0
     HOME_ORIG=`(cd $HOME; /bin/pwd)`
     HOME=`pwd`;                        export HOME
     RTM_SETTARG_CMD=":";               export RTM_SETTARG_CMD

     rm -fr _stderr.* _stdout.* err.* out.* .lmod.d

     runMe lua $(projectDir)/src/lmod.in.lua bash --version          # 1
     runMe lua $(projectDir)/src/lmod.in.lua bash load std           # 2
     runMe lua $(projectDir)/src/lmod.in.lua bash list               # 3
     runMe lua $(projectDir)/src/lmod.in.lua bash unload std         # 4
     runMe lua $(projectDir)/src/lmod.in.lua bash list               # 5
     runMe lua $(projectDir)/src/lmod.in.lua bash load gcc boost     # 6
     runMe lua $(projectDir)/src/lmod.in.lua bash list               # 7
     runMe lua $(projectDir)/src/lmod.in.lua bash purge              # 8
     runMe lua $(projectDir)/src/lmod.in.lua bash --force purge      # 9
     runMe lua $(projectDir)/src/lmod.in.lua bash list               #10
     runMe lua $(projectDir)/src/lmod.in.lua bash load std           #11
     runMe lua $(projectDir)/src/lmod.in.lua bash rm std             #12
     runMe lua $(projectDir)/src/lmod.in.lua bash list               #13
     runMe lua $(projectDir)/src/lmod.in.lua bash --force rm std     #14
     runMe lua $(projectDir)/src/lmod.in.lua bash list               #15
     runMe lua $(projectDir)/src/lmod.in.lua bash load StdEnv        #16
     runMe lua $(projectDir)/src/lmod.in.lua bash list               #17
     runMe lua $(projectDir)/src/lmod.in.lua bash load StdEnv        #18
     runMe lua $(projectDir)/src/lmod.in.lua bash list               #19


     HOME_ORIG=$HOME

     cat _stdout.[0-9][0-9] > _stdout.orig
     joinBase64Results -bash _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f $(cmdResultFn)
     wrapperDiff -r $(cmdResultFn) $(testDir)/out.txt out.txt
     wrapperDiff -r $(cmdResultFn) $(testDir)/err.txt err.txt
     testFinish -c $(cmdResultFn) -r $(resultFn) -t $(runtimeFn)
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
