===========================
step 1
lua ProjectDIR/src/lmod.in.lua bash --version
===========================
Modules based on Lua: Version 5.2.5 5.2.5-19-g329e179 2014-01-26 07:24
    by Robert McLay mclay@tacc.utexas.edu
===========================
step 2
lua ProjectDIR/src/lmod.in.lua bash use -a ProjectDIR/mf/Core ProjectDIR/mf/Beta ProjectDIR/rt/spider/mf/Core
===========================
===========================
step 3
lua ProjectDIR/src/lmod.in.lua bash spider
===========================
The following is a list of the modules currently available:
  admin: admin/admin-1.0
  alex: alex/1.0
  boost: boost/1.46.0, boost/1.47.1, boost/1.49.0
  gcc: gcc/4.2.3
  git: git/1.6.3.1, git/1.7.4, git/1.7.4.3
  gotoblas: gotoblas/1.20, gotoblas/1.26, gotoblas/1.30, gotoblas/1.30-beta, ...
    Blas Level 1, 2, 3 routines
  greenlet: greenlet/0.4.0
    The greenlet package is a spin-off of Stackless, a version of CPython
    that supports micro-threads called "tasklets". Tasklets run
    pseudo-concurrently (typically in a single or a few OS-level threads)
    and are synchronized with data exchanges on "channels". A "greenlet",
    on the other hand, is a still more primitive notion of micro-thread
    with no implicit scheduling; coroutines, in other words. This is useful
    when you want to control exactly when your code runs. - Homepage:
    https://github.com/python-greenlet/greenlet
  intel: intel/intel
  junk/a/c: junk/a/c/1.0
  junk/b/c: junk/b/c/2.0
  junk/d: junk/d/3.0
  local: local/local
  mpich2: mpich2/1.0.7
  multi: multi/multi
  noweb: noweb/2.10c
  openmpi: openmpi/1.2.6
  parmetis: parmetis/3.1, parmetis/4.0.1
    Parallel graph partitioning and fill-reduction matrix ordering routines
  petsc: petsc/3.1, petsc/3.2
  phdf5: phdf5/1.8.10, phdf5/1.8.2, phdf5/1.8.9
  PrgEnv: PrgEnv
  R: R/2.1.5, r/2.1.5
  unix: unix/unix
To learn more about a package enter:
   $ module spider Foo
where "Foo" is the name of a module
To find detailed information about a particular package you
must enter the version if there is more than one version:
   $ module spider Foo/11.1
===========================
step 4
lua ProjectDIR/src/lmod.in.lua bash -t spider
===========================
PrgEnv
R/
R/2.1.5
admin/
admin/admin-1.0
alex/
alex/1.0
boost/
boost/1.46.0
boost/1.47.1
boost/1.49.0
gcc/
gcc/4.2.3
git/
git/1.6.3.1
git/1.7.4
git/1.7.4.3
gotoblas/
gotoblas/1.20
gotoblas/1.26
gotoblas/1.30
gotoblas/1.30-beta
gotoblas/1.31
gotoblas/1.32
gotoblas/1.33
greenlet/
greenlet/0.4.0
intel/
intel/intel
junk/a/c/
junk/a/c/1.0
junk/b/c/
junk/b/c/2.0
junk/d/
junk/d/3.0
local/
local/local
mpich2/
mpich2/1.0.7
multi/
multi/multi
noweb/
noweb/2.10c
openmpi/
openmpi/1.2.6
parmetis/
parmetis/3.1
parmetis/4.0.1
petsc/
petsc/3.1
petsc/3.2
phdf5/
phdf5/1.8.10
phdf5/1.8.2
phdf5/1.8.9
r/
r/2.1.5
unix/
unix/unix
===========================
step 5
lua ProjectDIR/src/lmod.in.lua bash spider mpich2
===========================
  mpich2: mpich2/1.0.7
    This module can only be loaded through the following modules:
      intel/intel
===========================
step 6
lua ProjectDIR/src/lmod.in.lua bash spider mpich2/1.0.7
===========================
  mpich2: mpich2/1.0.7
    This module can only be loaded through the following modules:
      intel/intel
===========================
step 7
lua ProjectDIR/src/lmod.in.lua bash spider parmetis/3.1
===========================
  parmetis: parmetis/3.1
    Description:
      Parallel graph partitioning and fill-reduction matrix ordering
      routines
    Properties:
      built for host and native MIC
    This module can be loaded directly: module load parmetis/3.1
    Additional variants of this module can also be loaded after the loading the following modules:
      gcc/4.2.3, openmpi/1.2.6
      intel/intel, openmpi/1.2.6
===========================
step 8
lua ProjectDIR/src/lmod.in.lua bash spider mpich2me
===========================
Unable to find: "mpich2me"
===========================
step 9
lua ProjectDIR/src/lmod.in.lua bash spider R
===========================
  r:
     Versions:
        R/2.1.5
        r/2.1.5
  To find detailed information about r please enter the full name.
  For example:
     $ module spider r/2.1.5
===========================
step 10
lua ProjectDIR/src/lmod.in.lua bash spider ^R
===========================
  r:
     Versions:
        R/2.1.5
        r/2.1.5
  To find detailed information about r please enter the full name.
  For example:
     $ module spider r/2.1.5
===========================
step 11
lua ProjectDIR/src/lmod.in.lua bash spider mpich2/1.0.5
===========================
Lmod has detected the following error: Unable to find: "mpich2/1.0.5"
===========================
step 12
lua ProjectDIR/src/lmod.in.lua bash spider
===========================
The following is a list of the modules currently available:
  admin: admin/admin-1.0
  alex: alex/1.0
  boost: boost/1.46.0, boost/1.47.1, boost/1.49.0
  gcc: gcc/4.2.3
  git: git/1.6.3.1, git/1.7.4, git/1.7.4.3
  gotoblas: gotoblas/1.20, gotoblas/1.26, gotoblas/1.30, gotoblas/1.30-beta, ...
    Blas Level 1, 2, 3 routines
  greenlet: greenlet/0.4.0
    The greenlet package is a spin-off of Stackless, a version of CPython
    that supports micro-threads called "tasklets". Tasklets run
    pseudo-concurrently (typically in a single or a few OS-level threads)
    and are synchronized with data exchanges on "channels". A "greenlet",
    on the other hand, is a still more primitive notion of micro-thread
    with no implicit scheduling; coroutines, in other words. This is useful
    when you want to control exactly when your code runs. - Homepage:
    https://github.com/python-greenlet/greenlet
  intel: intel/intel
  junk/a/c: junk/a/c/1.0
  junk/b/c: junk/b/c/2.0
  junk/d: junk/d/3.0
  local: local/local
  mpich2: mpich2/1.0.7
  multi: multi/multi
  noweb: noweb/2.10c
  openmpi: openmpi/1.2.6
  parmetis: parmetis/3.1, parmetis/4.0.1
    Parallel graph partitioning and fill-reduction matrix ordering routines
  petsc: petsc/3.1, petsc/3.2
  phdf5: phdf5/1.8.10, phdf5/1.8.2, phdf5/1.8.9
  PrgEnv: PrgEnv
  R: R/2.1.5, r/2.1.5
  unix: unix/unix
To learn more about a package enter:
   $ module spider Foo
where "Foo" is the name of a module
To find detailed information about a particular package you
must enter the version if there is more than one version:
   $ module spider Foo/11.1
