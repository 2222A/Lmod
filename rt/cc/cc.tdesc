-- -*- lua -*-
local testName = "cc"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 testing  cc defaults problems
   ]],
   keywords = {testName },

   active   = true,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     export MODULEPATH_ROOT=$(testDir)/MF
     export MODULEPATH=$MODULEPATH_ROOT/modules
     export CC_CLUSTER="computecanada"
     export RSNT_INTERCONNECT="infiniband"
     export RSNT_ARCH="avx512"


     rm -fr _stderr.* _stdout.* err.* out.* .lmod.d

     runLmod --version                         # 1
     runLmod avail                             # 2
     runLmod load StdEnv/2016.4                # 3
     runLmod list                              # 4
     runLmod load arch/avx512                  # 5
     runLmod list                              # 6
     runLmod purge                             # 7
     runLmod load StdEnv                       # 8
     runLmod list                              # 9
     runLmod load arch/avx512                  #10
     runLmod list                              #11
     runLmod load StdEnv                       #12
     runLmod list                              #13

     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
